{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x315a3f5d4a482204eA7EaE89D05e64b6B90a919E",
      "txHash": "0x2b9d06c43f0af0138c29de9ed78382dcc0da6baee6bb941d820f409ae779fb51",
      "kind": "uups"
    },
    {
      "address": "0x1D6f1Ca3Df3d601A079E02dCaBd809D5Bd95fe80",
      "txHash": "0x47e35b974fa5179173619c45221ec4fa5ea9f42215205cb4974f3ecf4756747a",
      "kind": "uups"
    },
    {
      "address": "0x69617a3F0DB2443D735BC6aB40aa807F28029c0E",
      "txHash": "0x2de69441a7f11f60d9cbcce6648e3a28b8f2458ff46e212f0f92f19d5f7c1d41",
      "kind": "uups"
    },
    {
      "address": "0x55106CFA1217A15A6bcedc7dFf9Ca0897f4E378a",
      "txHash": "0x1047c7e3b5f8abd01b92818c006751b3b39d2808bcb1063c1b1792db2a2c64f5",
      "kind": "uups"
    },
    {
      "address": "0x952E87D7f2f5FDe3f387bE9bd6CE59Ad98BbD3A7",
      "txHash": "0x0f1c86e9b440d61eca2a25a90fdb3a7be495c36d78e0907eef46fe8fa9c96e04",
      "kind": "uups"
    },
    {
      "address": "0xeFc6E2808ba990B6344EC23316CFCA8a64F0597d",
      "txHash": "0x06592783b56be16f4bbb4d22667f58d0b489051990be843f7491061e99f87a33",
      "kind": "uups"
    },
    {
      "address": "0x60540b959652Ef4E955385C6E28529520a25dcd2",
      "txHash": "0xd095f5fa0eb15b9fdb5dfa9ed7df2ce07aacf7779fe8201f55182de001f171b1",
      "kind": "uups"
    },
    {
      "address": "0xd064888B3C5aEb7Be565aa7F375D89FF3405f3f8",
      "txHash": "0x637e048c662720f0d9dacbc8d6176d055cc9ce5c54ded1b45193f02361f7c52d",
      "kind": "uups"
    },
    {
      "address": "0xAC4d1d37b307DE646A82A65F9a19a5a54F4D8f00",
      "txHash": "0x79ee07234f273a7e71fd9771b216b08ad6bcb53ab07fbb41d10d0dcbe08fd3d9",
      "kind": "uups"
    },
    {
      "address": "0x9Db249617E876c18248Bf5Cd1289fA33A725170d",
      "txHash": "0x4496ebf779103911396d92bd88c86f7f8dfc71aea419e9a34aedfb6bdda5e7af",
      "kind": "uups"
    },
    {
      "address": "0xEE86Ba8e666AfA9553909d864Af7f94057De5A79",
      "txHash": "0x9c098035b5c6ca83d61b20875d710b8c348dd20a1f90751549b9f1ebe1e49a7e",
      "kind": "uups"
    },
    {
      "address": "0x10375fdf730D39774eF1fD20424CD0504ef35afb",
      "txHash": "0x5d5273f272a4a67e72570441eb3db1c0137321e19e22c2ece76e8cb8a8d5bc9c",
      "kind": "uups"
    }
  ],
  "impls": {
    "1236f01cd3cbda36a45dd00ed44c94ac24b5b20ab937587eb7d00d7ad5423164": {
      "address": "0x0E5184813A774f32472F189260275cE1323a837F",
      "txHash": "0x72dcd06cc3b35274ffce2759a4721b9410cfd78b83e17f57d21b5297f02a9e3a",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "claimTopics",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ClaimTopicsRegistry",
            "src": "contracts/identity/ClaimTopicsRegistry.sol:18"
          },
          {
            "label": "claimTopicsMap",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ClaimTopicsRegistry",
            "src": "contracts/identity/ClaimTopicsRegistry.sol:19"
          },
          {
            "label": "trustedIssuers",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ClaimTopicsRegistry",
            "src": "contracts/identity/ClaimTopicsRegistry.sol:22"
          },
          {
            "label": "trustedIssuersMap",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ClaimTopicsRegistry",
            "src": "contracts/identity/ClaimTopicsRegistry.sol:23"
          },
          {
            "label": "issuerClaimTopics",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "ClaimTopicsRegistry",
            "src": "contracts/identity/ClaimTopicsRegistry.sol:24"
          },
          {
            "label": "issuerTopicMap",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "ClaimTopicsRegistry",
            "src": "contracts/identity/ClaimTopicsRegistry.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1bc7c0bcfc5d1c1bb9ff420c9cc36bcbe67e440e05851f1f87c07a10c3d63dcc": {
      "address": "0xD2705bfE082dBD18a92a05cB91756b321c5C43Dc",
      "txHash": "0x37944fb25478eb62954d6d1a7924b30370e6abf7f015e8116e8972288422b81b",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_identities",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_contract(IIdentity)8634)",
            "contract": "IdentityRegistry",
            "src": "contracts/identity/IdentityRegistry.sol:20"
          },
          {
            "label": "_countries",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_uint16)",
            "contract": "IdentityRegistry",
            "src": "contracts/identity/IdentityRegistry.sol:21"
          },
          {
            "label": "_hasIdentity",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "IdentityRegistry",
            "src": "contracts/identity/IdentityRegistry.sol:22"
          },
          {
            "label": "topicsRegistry",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(IClaimTopicsRegistry)8387",
            "contract": "IdentityRegistry",
            "src": "contracts/identity/IdentityRegistry.sol:24"
          },
          {
            "label": "investorsList",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdentityRegistry",
            "src": "contracts/identity/IdentityRegistry.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IClaimTopicsRegistry)8387": {
            "label": "contract IClaimTopicsRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IIdentity)8634": {
            "label": "contract IIdentity",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_contract(IIdentity)8634)": {
            "label": "mapping(address => contract IIdentity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "07367a893ec2f25d23fd770deb2d212c566dd05ddc4ed0ac3d538aeb3d2bda36": {
      "address": "0xC67E20354AaE72F669cdE0a66C37c1C5cc0dd752",
      "txHash": "0x955294df85e410e48b3906920a593cc4be062ed059595dfbd5787926b72851be",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "issuedClaims",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes32))",
            "contract": "ClaimIssuer",
            "src": "contracts/identity/ClaimIssuer.sol:27"
          },
          {
            "label": "revokedClaims",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "ClaimIssuer",
            "src": "contracts/identity/ClaimIssuer.sol:28"
          },
          {
            "label": "claimIssuanceDate",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ClaimIssuer",
            "src": "contracts/identity/ClaimIssuer.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bytes32))": {
            "label": "mapping(address => mapping(uint256 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "9e8d27dc47a5a2206e0a10a792738bb8134544beba9c464154636f4ef2eecd8f": {
      "address": "0xCed593f751F1F93d1Dd3B8Cc571A7A221661B27B",
      "txHash": "0x5046767bfd5cf632c0fffb18218297f4eb1573627af1c2f5b71d8416dfee2232",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IToken)3231",
            "contract": "AbstractModule",
            "src": "contracts/compliance/modular/AbstractModule.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "allowedCountries",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint16,t_bool)",
            "contract": "CountryRestrictModule",
            "src": "contracts/compliance/modular/CountryRestrictModule.sol:13"
          },
          {
            "label": "countryPairRestrictions",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_bool))",
            "contract": "CountryRestrictModule",
            "src": "contracts/compliance/modular/CountryRestrictModule.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IToken)3231": {
            "label": "contract IToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint16,t_bool)": {
            "label": "mapping(uint16 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_bool))": {
            "label": "mapping(uint16 => mapping(uint16 => bool))",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "bb5b585130de0ec5e3eefb65d30f5494bb730b7fcc4f8dfa815315933ec55128": {
      "address": "0xDfD80d60BCA3D63190041b710380bA6Ab280f6E2",
      "txHash": "0x37aa94007f7928d350dc83668cd119456da4323b1f9ff1c17d6420b02a73704a",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IToken)3231",
            "contract": "AbstractModule",
            "src": "contracts/compliance/modular/AbstractModule.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "transferLimits",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_struct(TransferLimit)2200_storage)",
            "contract": "TransferLimitModule",
            "src": "contracts/compliance/modular/TransferLimitModule.sol:21"
          },
          {
            "label": "defaultDailyLimit",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "TransferLimitModule",
            "src": "contracts/compliance/modular/TransferLimitModule.sol:22"
          },
          {
            "label": "defaultMonthlyLimit",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "TransferLimitModule",
            "src": "contracts/compliance/modular/TransferLimitModule.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IToken)3231": {
            "label": "contract IToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(TransferLimit)2200_storage)": {
            "label": "mapping(address => struct TransferLimitModule.TransferLimit)",
            "numberOfBytes": "32"
          },
          "t_struct(TransferLimit)2200_storage": {
            "label": "struct TransferLimitModule.TransferLimit",
            "members": [
              {
                "label": "dailyLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "monthlyLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastDayReset",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastMonthReset",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "dailyTransferred",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "monthlyTransferred",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "63d5cc1fa865602d1b9de122aae3247e22593decd3d4d4a7697d6390f9f464fe": {
      "address": "0xf7131BBB9a2e38Fab57b8D2FE3032cb1340a6170",
      "txHash": "0x3ecdf4adb44fe67bc6039e05563f20ae274f9778515515f77d57e58fdd1b4e83",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IToken)3231",
            "contract": "AbstractModule",
            "src": "contracts/compliance/modular/AbstractModule.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "maxBalances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MaxBalanceModule",
            "src": "contracts/compliance/modular/MaxBalanceModule.sol:12"
          },
          {
            "label": "defaultMaxBalance",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "MaxBalanceModule",
            "src": "contracts/compliance/modular/MaxBalanceModule.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IToken)3231": {
            "label": "contract IToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "a50a2c2d543140d55f56b1edf5e60b6d01e0cb684d89bfcaae19ed5ec05d83c5": {
      "address": "0x63684A1B79F57cD5eD3b89bA7D0BAE1339207C83",
      "txHash": "0xf80a24023a960164d2ebbf9351b15f11a49c4a8014a78c426f3dabbc4779a709",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "modules",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_contract(IModule)6567)dyn_storage",
            "contract": "ModularCompliance",
            "src": "contracts/compliance/ModularCompliance.sol:20"
          },
          {
            "label": "moduleBound",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ModularCompliance",
            "src": "contracts/compliance/ModularCompliance.sol:21"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IToken)10806",
            "contract": "ModularCompliance",
            "src": "contracts/compliance/ModularCompliance.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_contract(IModule)6567)dyn_storage": {
            "label": "contract IModule[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IModule)6567": {
            "label": "contract IModule",
            "numberOfBytes": "20"
          },
          "t_contract(IToken)10806": {
            "label": "contract IToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "69dadd9e035715de07bd6ea937ac27654b0e7c14351af17cda04202cd4a20150": {
      "address": "0x9Ac29886373E517fe4806CC9D55Cd53b9AB7AC56",
      "txHash": "0xccf3a754467e599ebf25ecee5661aa8cad2a149afde34adb17292476108a7563",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_accountBalanceSnapshots",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_struct(Snapshots)2145_storage)",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:57"
          },
          {
            "label": "_totalSupplySnapshots",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(Snapshots)2145_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:58"
          },
          {
            "label": "_currentSnapshotId",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(Counter)3035_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:203"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_tokenName",
            "offset": 0,
            "slot": "451",
            "type": "t_string_storage",
            "contract": "Token",
            "src": "contracts/token/Token.sol:35"
          },
          {
            "label": "_tokenSymbol",
            "offset": 0,
            "slot": "452",
            "type": "t_string_storage",
            "contract": "Token",
            "src": "contracts/token/Token.sol:36"
          },
          {
            "label": "_tokenDecimals",
            "offset": 0,
            "slot": "453",
            "type": "t_uint8",
            "contract": "Token",
            "src": "contracts/token/Token.sol:37"
          },
          {
            "label": "_tokenVersion",
            "offset": 0,
            "slot": "454",
            "type": "t_string_storage",
            "contract": "Token",
            "src": "contracts/token/Token.sol:38"
          },
          {
            "label": "_tokenOnchainID",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "Token",
            "src": "contracts/token/Token.sol:39"
          },
          {
            "label": "_identityRegistry",
            "offset": 0,
            "slot": "456",
            "type": "t_contract(IIdentityRegistry)8755",
            "contract": "Token",
            "src": "contracts/token/Token.sol:42"
          },
          {
            "label": "_tokenCompliance",
            "offset": 0,
            "slot": "457",
            "type": "t_contract(ICompliance)5635",
            "contract": "Token",
            "src": "contracts/token/Token.sol:43"
          },
          {
            "label": "_frozen",
            "offset": 0,
            "slot": "458",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Token",
            "src": "contracts/token/Token.sol:46"
          },
          {
            "label": "_frozenTokens",
            "offset": 0,
            "slot": "459",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Token",
            "src": "contracts/token/Token.sol:47"
          },
          {
            "label": "assets",
            "offset": 0,
            "slot": "460",
            "type": "t_mapping(t_bytes32,t_struct(Asset)9440_storage)",
            "contract": "FinatradesRWA_ERC3643",
            "src": "contracts/FinatradesRWA_ERC3643.sol:21"
          },
          {
            "label": "rentalInfo",
            "offset": 0,
            "slot": "461",
            "type": "t_mapping(t_bytes32,t_struct(RentalInfo)9451_storage)",
            "contract": "FinatradesRWA_ERC3643",
            "src": "contracts/FinatradesRWA_ERC3643.sol:22"
          },
          {
            "label": "assetIds",
            "offset": 0,
            "slot": "462",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "FinatradesRWA_ERC3643",
            "src": "contracts/FinatradesRWA_ERC3643.sol:23"
          },
          {
            "label": "totalAssets",
            "offset": 0,
            "slot": "463",
            "type": "t_uint256",
            "contract": "FinatradesRWA_ERC3643",
            "src": "contracts/FinatradesRWA_ERC3643.sol:24"
          },
          {
            "label": "dividendAmounts",
            "offset": 0,
            "slot": "464",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "FinatradesRWA_ERC3643",
            "src": "contracts/FinatradesRWA_ERC3643.sol:27"
          },
          {
            "label": "dividendSnapshots",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "FinatradesRWA_ERC3643",
            "src": "contracts/FinatradesRWA_ERC3643.sol:28"
          },
          {
            "label": "dividendClaimed",
            "offset": 0,
            "slot": "466",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "FinatradesRWA_ERC3643",
            "src": "contracts/FinatradesRWA_ERC3643.sol:29"
          },
          {
            "label": "dividendAsset",
            "offset": 0,
            "slot": "467",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "FinatradesRWA_ERC3643",
            "src": "contracts/FinatradesRWA_ERC3643.sol:30"
          },
          {
            "label": "dividendIndex",
            "offset": 0,
            "slot": "468",
            "type": "t_uint256",
            "contract": "FinatradesRWA_ERC3643",
            "src": "contracts/FinatradesRWA_ERC3643.sol:31"
          },
          {
            "label": "totalDividendsDistributed",
            "offset": 0,
            "slot": "469",
            "type": "t_uint256",
            "contract": "FinatradesRWA_ERC3643",
            "src": "contracts/FinatradesRWA_ERC3643.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICompliance)5635": {
            "label": "contract ICompliance",
            "numberOfBytes": "20"
          },
          "t_contract(IIdentityRegistry)8755": {
            "label": "contract IIdentityRegistry",
            "numberOfBytes": "20"
          },
          "t_enum(AssetStatus)9419": {
            "label": "enum AssetLib.AssetStatus",
            "members": [
              "NONE",
              "ACTIVE",
              "UNDER_MANAGEMENT",
              "FOR_SALE",
              "SOLD",
              "DEFAULTED"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(AssetType)9412": {
            "label": "enum AssetLib.AssetType",
            "members": [
              "NONE",
              "RESIDENTIAL",
              "COMMERCIAL",
              "INDUSTRIAL",
              "AGRICULTURAL",
              "MIXED_USE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Snapshots)2145_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Asset)9440_storage)": {
            "label": "mapping(bytes32 => struct AssetLib.Asset)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RentalInfo)9451_storage)": {
            "label": "mapping(bytes32 => struct AssetLib.RentalInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Asset)9440_storage": {
            "label": "struct AssetLib.Asset",
            "members": [
              {
                "label": "assetType",
                "type": "t_enum(AssetType)9412",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetAddress",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "legalDescription",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "valuationAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "valuationDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "yearBuilt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalArea",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "assetStatus",
                "type": "t_enum(AssetStatus)9419",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "ipfsHash",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Counter)3035_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RentalInfo)9451_storage": {
            "label": "struct AssetLib.RentalInfo",
            "members": [
              {
                "label": "monthlyRent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastRentCollection",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalRentCollected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "occupancyRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "rentCollector",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Snapshots)2145_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
